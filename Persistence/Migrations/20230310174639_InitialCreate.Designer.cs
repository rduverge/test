// <auto-generated />
using System;
using CuentasPorCobrar.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(CuentasporcobrardbContext))]
    [Migration("20230310174639_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CuentasPorCobrar.Shared.AccountingEntry", b =>
                {
                    b.Property<int>("AccountingEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountingEntryId"));

                    b.Property<int>("Account")
                        .HasColumnType("integer");

                    b.Property<decimal>("AccountEntryAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("AccountEntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("MovementType")
                        .HasColumnType("integer");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.HasKey("AccountingEntryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AccountingEntries");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("money");

                    b.Property<string>("Identification")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("LedgerAccount")
                        .HasColumnType("integer");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.HasKey("DocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("DocumentNumber")
                        .HasColumnType("uuid");

                    b.Property<int?>("MovementType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TransactionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocumentId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.AccountingEntry", b =>
                {
                    b.HasOne("CuentasPorCobrar.Shared.Customer", "Customer")
                        .WithMany("AccountingEntries")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Transaction", b =>
                {
                    b.HasOne("CuentasPorCobrar.Shared.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("CuentasPorCobrar.Shared.Document", "Document")
                        .WithMany("Transactions")
                        .HasForeignKey("DocumentId");

                    b.Navigation("Customer");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Customer", b =>
                {
                    b.Navigation("AccountingEntries");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CuentasPorCobrar.Shared.Document", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
